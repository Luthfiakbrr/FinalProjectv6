name: 🚀 CI Pipeline with Allure Report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ⚡ Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Install browser dependencies
      - name: 🖥️ Install Browsers (Chrome + Firefox + Edge Chromium)
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable firefox
          # Edge (chromium) install
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable

      - name: 🔑 Grant execute permission for Gradlew
        run: chmod +x gradlew

      # Restore allure history agar trend muncul
      - name: ♻️ Restore Allure history
        uses: actions/cache@v3
        with:
          path: build/allure-report/history
          key: ${{ runner.os }}-allure-history

      - name: 🧪 Run API Tests
        run: ./gradlew apiTest --stacktrace

      - name: 🌐 Run Web Tests (Headless Chrome)
        run: ./gradlew webTest -Dheadless=true -Dbrowser=chrome --stacktrace

      - name: 🔄 Run Combined Tests (Headless Chrome)
        run: ./gradlew combinedTest -Dheadless=true -Dbrowser=chrome --stacktrace

      - name: 📝 Create Allure Environment & Categories
        run: |
          mkdir -p build/allure-results
          echo "Browser=Chrome (Headless)" >> build/allure-results/environment.properties
          echo "Environment=CI" >> build/allure-results/environment.properties
          echo "APIBaseURL=https://dummyapi.io" >> build/allure-results/environment.properties
          echo "WebBaseURL=https://www.saucedemo.com" >> build/allure-results/environment.properties
          echo "OS=$(uname -s)" >> build/allure-results/environment.properties
          echo "Tester=Luthfi Akbar" >> build/allure-results/environment.properties

          cat > build/allure-results/categories.json <<EOL
          [
            {
              "name": "Product defects",
              "matchedStatuses": ["failed"],
              "messageRegex": ".*AssertionError.*"
            },
            {
              "name": "Infrastructure problems",
              "matchedStatuses": ["broken", "unknown"],
              "messageRegex": ".*(TimeoutException|NoSuchElementException).*"
            },
            {
              "name": "Flaky tests",
              "matchedStatuses": ["failed"],
              "messageRegex": ".*(ElementClickInterceptedException).*"
            }
          ]
          EOL

      - name: 📊 Generate Allure Report
        run: ./gradlew allureReport

      # Simpan history agar tidak hilang di run berikutnya
      - name: 💾 Save Allure history
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: build/allure-report/history

      - name: 📦 Upload Allure Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/reports/allure-report

      # Tambah summary di PR (menarik untuk reviewer)
      - name: 📨 Allure Summary in PR
        if: github.event_name == 'pull_request'
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/build/allure-results/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
